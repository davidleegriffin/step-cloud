type Image {
	url: String!
	assetId: ID!
	publicId: ID
	format: String
	bytes: Float
}

type Query {
	cloudinaryImage(publicId: ID!): Image
		@rest(
			setters: [
				{ field: "url", path: "resources[].secure_url" }
				{ field: "assetId", path: "resources[].asset_id" }
				{ field: "publicId", path: "resources[].public_id" }
				{ field: "format", path: "resources[].format" }
				{ field: "bytes", path: "resources[].bytes" }
			]
			resultroot: ""
			endpoint: "https://$api_key:$api_secret@api.cloudinary.com/v1_1/$cloud_name/resources/image?public_ids=$publicId"
			configuration: "cloudinary_config"
		)
	cloudinaryImages: [Image]
		@rest(
			setters: [
				{ field: "url", path: "resources[].secure_url" }
				{ field: "assetId", path: "resources[].asset_id" }
				{ field: "publicId", path: "resources[].public_id" }
				{ field: "format", path: "resources[].format" }
				{ field: "bytes", path: "resources[].bytes" }
			]
			resultroot: ""
			endpoint: "https://$api_key:$api_secret@api.cloudinary.com/v1_1/$cloud_name/resources/image"
			configuration: "cloudinary_config"
		)
}

type createImage {
  image: String!
  folder: String
  assetId: ID!
  publicId: ID
  format: String
  bytes: Float
}
type Mutation {
	createImage(image: String!, folder: String!, publicId: String!): Image
		@rest(
		method: POST
		setters: [
			{ field: "assetId", path: "asset_id" }
			{ field: "publicId", path: "public_id" }
      	]
		postbody: "file={{.Get \\\"image\\\"}}&public_id={{.Get \\\"publicId\\\"}}&upload_preset={{.Get \\\"upload_preset\\\"}}&folder={{.Get \\\"folder\\\"}}"
		endpoint: "https://api.cloudinary.com/v1_1/$cloud_name/image/upload"
		configuration: "cloudinary_config"
		)
}