{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/davidgriffin/projects/step-cloud/screens/TabOneScreen.tsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { useForm } from \"react-hook-form\";\nimport { Text, View } from \"../components/Themed\";\nimport Button from \"../components/Button\";\nimport * as ImagePicker from 'expo-image-picker';\nexport default function TabOneScreen() {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      image = _useState2[0],\n      setImage = _useState2[1];\n\n  var _useForm = useForm(),\n      handleSubmit = _useForm.handleSubmit,\n      register = _useForm.register,\n      errors = _useForm.errors;\n\n  var onSubmit = function onSubmit(values) {\n    return console.log(values);\n  };\n\n  useEffect(function () {\n    (function _callee() {\n      var _await$ImagePicker$re, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(Platform.OS !== 'web')) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(ImagePicker.requestMediaLibraryPermissionsAsync());\n\n            case 3:\n              _await$ImagePicker$re = _context.sent;\n              status = _await$ImagePicker$re.status;\n\n              if (status !== 'granted') {\n                alert('Sorry, we need camera roll permissions to make this work!');\n              }\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  var pickImage = function pickImage() {\n    var result;\n    return _regeneratorRuntime.async(function pickImage$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.Images,\n              allowsEditing: true,\n              aspect: [4, 3],\n              quality: 1\n            }));\n\n          case 2:\n            result = _context2.sent;\n\n            if (!result.cancelled) {\n              setImage(result.uri);\n              console.log('local-image', image);\n            }\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 3\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 4\n    }\n  }, \"Home\"), React.createElement(View, {\n    style: styles.separator,\n    lightColor: \"#eee\",\n    darkColor: \"rgba(255,255,255,0.1)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }\n  }), React.createElement(View, {\n    style: styles.picker,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 4\n    }\n  }, React.createElement(Button, {\n    onPress: pickImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, \"Select Image\"), image && React.createElement(Image, {\n    source: {\n      uri: image\n    },\n    style: {\n      width: 300,\n      height: 300\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  }), image && React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }\n  }, React.createElement(\"input\", _extends({}, register(\"username\", {\n    validate: function validate(value) {\n      return value !== \"admin\" || \"Nice try!\";\n    }\n  }), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 6\n    }\n  })), errors.username && errors.username.message, React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 6\n    }\n  }, \"Submit\"))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\"\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: \"bold\"\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: \"80%\"\n  },\n  picker: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: 200\n  }\n});","map":{"version":3,"sources":["/Users/davidgriffin/projects/step-cloud/screens/TabOneScreen.tsx"],"names":["React","useState","useEffect","useForm","Text","View","Button","ImagePicker","TabOneScreen","image","setImage","handleSubmit","register","errors","onSubmit","values","console","log","Platform","OS","requestMediaLibraryPermissionsAsync","status","alert","pickImage","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","Images","allowsEditing","aspect","quality","result","cancelled","uri","styles","container","title","separator","picker","width","height","validate","value","username","message","StyleSheet","create","flex","alignItems","fontSize","fontWeight","marginVertical","justifyContent"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { StyleSheet, Platform, Image } from \"react-native\";\nimport { useForm } from \"react-hook-form\";\nimport { Text, View } from \"../components/Themed\";\nimport Button from '../components/Button';\nimport * as ImagePicker from 'expo-image-picker';\n\n\nexport default function TabOneScreen() {\n\tconst [image, setImage] = useState();\n\n\tconst { handleSubmit, register, errors } = useForm();\n\tconst onSubmit = values => console.log(values);\n\n\tuseEffect(() => {\n\t\t(async () => {\n\t\t  if (Platform.OS !== 'web') {\n\t\t\tconst { status } = await ImagePicker.requestMediaLibraryPermissionsAsync();\n\t\t\tif (status !== 'granted') {\n\t\t\t  alert('Sorry, we need camera roll permissions to make this work!');\n\t\t\t}\n\t\t  }\n\t\t})();\n\t  }, []);\n\t\n\t  const pickImage = async () => {\n\t\t  let result = await ImagePicker.launchImageLibraryAsync({\n\t\t\tmediaTypes: ImagePicker.MediaTypeOptions.Images,\n\t\t\tallowsEditing: true,\n\t\t\taspect: [4, 3],\n\t\t\tquality: 1,\n\t\t  });\n\t\n\t\t\n\t\tif (!result.cancelled) {\n\t\t//   console.log('result', result);\n\t\t  setImage(result.uri);\n\t\t  console.log('local-image', image);\n\t\t} \n\t  \n\t  };\n\n\treturn (\n\t\t<View style={styles.container}>\n\t\t\t<Text style={styles.title}>Home</Text>\n\t\t\t<View\n\t\t\t\tstyle={styles.separator}\n\t\t\t\tlightColor=\"#eee\"\n\t\t\t\tdarkColor=\"rgba(255,255,255,0.1)\"\n\t\t\t/>\n\t\t\t<View style={styles.picker}>\n\t\t\t\t<Button onPress={pickImage}>Select Image</Button>\n\t\t\t\t{image && <Image source={{ uri: image }} style={{ width: 300, height: 300 }} />}\n\t\t\t\t{image && <form onSubmit={handleSubmit(onSubmit)}>\n\n\t\t\t\t\t<input\n\t\t\t\t\t\t{...register(\"username\", {\n\t\t\t\t\t\tvalidate: value => value !== \"admin\" || \"Nice try!\"\n\t\t\t\t\t\t})}\n\t\t\t\t\t/>\n\t\t\t\t\t{errors.username && errors.username.message}\n\n\t\t\t\t\t<button type=\"submit\">Submit</button>\n\t\t\t\t</form>}\n        \t</View>\n\t\t</View>\n\t);\n}\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflex: 1,\n\t\talignItems: \"center\",\n\t\t// justifyContent: \"center\",\n\t},\n\ttitle: {\n\t\tfontSize: 20,\n\t\tfontWeight: \"bold\",\n\t},\n\tseparator: {\n\t\tmarginVertical: 30,\n\t\theight: 1,\n\t\twidth: \"80%\",\n\t},\n\tpicker: {\n\t\tflex: 1, \n\t\talignItems: 'center', \n\t\tjustifyContent: 'center', \n\t\twidth: 200,\n\t  },\n});\n"]},"metadata":{},"sourceType":"module"}